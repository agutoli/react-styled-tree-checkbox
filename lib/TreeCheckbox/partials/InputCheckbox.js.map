{"version":3,"sources":["../../../src/TreeCheckbox/partials/InputCheckbox.js"],"names":["_inputWrapper","_inputCheckmark","Input","styled","input","InputWrapper","label","InputCheckmark","span","props"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,MAAMA,gBAAgB,kCAAiB,wBAAjB,CAAtB;AACA,MAAMC,kBAAkB,kCAAiB,0BAAjB,CAAxB;;AAEA,MAAMC,QAAQC,2BAAOC,KAAf,iBAAN;;AAQA,MAAMC,eAAeF,2BAAOG,KAAtB,mBAKFN,cAAc,WAAd,CALE,EAMFA,cAAc,aAAd,CANE,EAOFA,cAAc,cAAd,CAPE,EAQFA,cAAc,eAAd,CARE,CAAN;;AAWA,MAAMO,iBAAiBJ,2BAAOK,IAAxB,mBAEFP,gBAAgB,KAAhB,CAFE,EAGFA,gBAAgB,MAAhB,CAHE,EAIFA,gBAAgB,QAAhB,CAJE,EAKFA,gBAAgB,OAAhB,CALE,EAMFA,gBAAgB,kBAAhB,CANE,EAOFA,gBAAgB,cAAhB,CAPE,EAQFA,gBAAgB,cAAhB,CARE,EASFA,gBAAgB,cAAhB,CATE,EAUFA,gBAAgB,eAAhB,CAVE,EAkBAA,gBAAgB,MAAhB,EAAwB,OAAxB,CAlBA,EAmBAA,gBAAgB,KAAhB,EAAuB,OAAvB,CAnBA,EAoBAA,gBAAgB,OAAhB,EAAyB,OAAzB,CApBA,EAqBAA,gBAAgB,QAAhB,EAA0B,OAA1B,CArBA,EAsBAA,gBAAgB,QAAhB,EAA0B,OAA1B,CAtBA,EAuBAA,gBAAgB,cAAhB,EAAgC,OAAhC,CAvBA,EA0BFI,YA1BE,EA0BoBH,KA1BpB,EA2BAD,gBAAgB,kBAAhB,EAAoC,OAApC,CA3BA,EA8BFC,KA9BE,EA+BAD,gBAAgB,cAAhB,EAAgC,SAAhC,CA/BA,EAgCAA,gBAAgB,kBAAhB,EAAoC,SAApC,CAhCA,EAmCFC,KAnCE,CAAN;;oBAwCe,UAACO,KAAD;AAAA,WACb;AAAC,kBAAD;AAAA;AACE,oCAAC,KAAD,eAAWA,KAAX,IAAkB,MAAK,UAAvB,IADF;AAEE,oCAAC,cAAD,IAAgB,WAAU,WAA1B;AAFF,KADa;AAAA,G","file":"InputCheckbox.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { autoCssGenerator } from '../cssHelpers.js';\n\nconst _inputWrapper = autoCssGenerator('input-checkbox-wrapper');\nconst _inputCheckmark = autoCssGenerator('input-checkbox-checkmark');\n\nconst Input = styled.input`\n  width: 0;\n  height: 0;\n  opacity: 0;\n  cursor: pointer;\n  position: absolute;\n`\n\nconst InputWrapper = styled.label`\n  display: block;\n  cursor: pointer;\n  position: relative;\n\n  ${_inputWrapper('font-size')}\n  ${_inputWrapper('user-select')}\n  ${_inputWrapper('padding-left')}\n  ${_inputWrapper('margin-bottom')}\n`\n\nconst InputCheckmark = styled.span`\n  position: absolute;\n  ${_inputCheckmark('top')}\n  ${_inputCheckmark('left')}\n  ${_inputCheckmark('height')}\n  ${_inputCheckmark('width')}\n  ${_inputCheckmark('background-color')}\n  ${_inputCheckmark('border-width')}\n  ${_inputCheckmark('border-style')}\n  ${_inputCheckmark('border-color')}\n  ${_inputCheckmark('border-radius')}\n\n  &::after {\n    content: \"\";\n    display: none;\n    position: absolute;\n    transform: rotate(45deg);\n\n    ${_inputCheckmark('left', 'after')}\n    ${_inputCheckmark('top', 'after')}\n    ${_inputCheckmark('width', 'after')}\n    ${_inputCheckmark('height', 'after')}\n    ${_inputCheckmark('border', 'after')}\n    ${_inputCheckmark('border-width', 'after')}\n  }\n\n  ${InputWrapper}:hover ${Input} ~ & {\n    ${_inputCheckmark('background-color', 'hover')}\n  }\n\n  ${Input}:checked ~ && {\n    ${_inputCheckmark('border-color', 'checked')}\n    ${_inputCheckmark('background-color', 'checked')}\n  }\n\n  ${Input}:checked ~ &:after {\n    display: block;\n  }\n`\n\nexport default (props) => (\n  <InputWrapper>\n    <Input {...props} type=\"checkbox\" />\n    <InputCheckmark className=\"checkmark\" />\n  </InputWrapper>\n)\n"]}